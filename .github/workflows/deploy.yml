name: Deploy Medusa to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "$SSH_PRIVATE_KEY" > awsmedusa.pem
          chmod 600 awsmedusa.pem

      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}  # Add this if you're using DATABASE_URL
        run: |
          ssh -o StrictHostKeyChecking=no -i awsmedusa.pem ubuntu@$EC2_HOST << 'EOF'
            # Update package index and install Docker if not already installed
            sudo apt-get update -y
            sudo apt-get install -y docker.io
            
            # Login to Docker Hub
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            
            # Pull the latest image from Docker Hub
            docker pull $DOCKER_USERNAME/my-medusa-app:latest
            
            # Stop and remove the existing container if it exists
            docker stop my-medusa-app || true
            docker rm my-medusa-app || true
            
            # Run the new container with the latest image
            docker run -d --name my-medusa-app -p 80:7001 -e DATABASE_URL=$DATABASE_URL $DOCKER_USERNAME/my-medusa-app:latest
          EOF
        shell: bash
